[build-system]
requires = [
    "setuptools>=77.0",
    'wheel',
    'conan>=2.0',
    'cmake<4.0',
    'uiucprescon.build @ https://github.com/UIUCLibrary/uiucprescon_build/releases/download/v0.2.9/uiucprescon_build-0.2.9-py3-none-any.whl'
]
build-backend = "uiucprescon.build"

[project]
name = "uiucprescon.ocr"
version = "0.1.5.dev0"
classifiers = [
    'Development Status :: 3 - Alpha',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
readme = "README.rst"
requires-python = ">=3.9"
license = "NCSA"
license-files = ["LICENSE"]
description = "Image to text processing using Google Tesseract"
maintainers = [
    { name="Henry Borchers", email="hborcher@illinois.edu" }
]
authors = [
    {name="University Library at The University of Illinois at Urbana Champaign: Preservation Services", email="prescons@library.illinois.edu"}
]


[project.urls]
Documentation = "https://www.library.illinois.edu/dccdocs/ocr"
Download = "https://github.com/UIUCLibrary/ocr"

[dependency-groups]
test = [
    "pytest",
    "pytest-bdd<9.0",
    "coverage"
]
conan =["conan>=2.0", "cmake<4.0"]
docs = ["sphinx", "setuptools", "toml; python_version < '3.11'"]
tox = ["tox"]
dev = [
    {include-group = "docs"},
    {include-group = "tox"},
    {include-group = "test"},
    "flake8",
    "gcovr",
    "lxml",
    "mypy",
    "pylint",
]
cibuildwheel = ["cibuildwheel"]
package = ["delocate ; sys_platform == 'darwin'"]
publish = ["twine"]
ci = [
    {include-group = "dev"},
    {include-group = "publish"},
    {include-group = "conan"},
    "pysonar",
]

[tool.setuptools]
packages = [
    "uiucprescon.ocr"
]
include-package-data = false
zip-safe = false

[tool.setuptools.package-data]
"uiucprescon.ocr" = ["py.typed"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
 ]
addopts = "--verbose"
markers = [
    "integration"
]
norecursedirs = [
    "features",
    "build"
]
junit_logging = "all"
junit_log_passing_tests = true
junit_family="xunit2"
bdd_features_base_dir = "tests/features/"

[tool.coverage.run]
relative_files = true
branch = true

[tool.coverage.paths]
source = [
    "uiucprescon/"
]

[tool.coverage.report]
exclude_lines = [
    'raise NotImplementedError'
]

[tool.coverage.html]
directory = "reports/coverage"


[tool.pylint.MASTER]
init-hook="sys.path.append('.')"

[tool.cibuildwheel]
test-command = "pytest {project}/tests"

manylinux-x86_64-image = "manylinux2014"
build-frontend = "build[uv]"
skip = [
    "cp38-*",
    "*-win32",
    "*-musllinux*",
    "*-manylinux_i686"
]
build-verbosity = 1
environment-pass = ["CONAN_COMPILER_LIBCXX", "CONAN_COMPILER_VERSION"]

[tool.cibuildwheel.windows]
before-all = [
    'echo Conan user home: %CONAN_USER_HOME%',
    'uv run --only-group conan --isolated conan profile detect --exist-ok',
    'uv run --only-group conan --isolated conan install ./ --build missing -s compiler.cppstd=17',
]
environment-pass = ["CONAN_USER_HOME", "CONAN_HOME"]
test-requires = ["pytest", "pytest-bdd"]

[tool.cibuildwheel.macos]
test-groups = ["test"]
before-all = [
    'echo "Conan user home: $CONAN_USER_HOME"',
    'echo "Conan home: $CONAN_HOME"',
    'uv run --only-group conan --isolated conan profile detect --exist-ok',
    'uv run --only-group conan --with ninja --isolated conan install conanfile.py -pr:h {package}/ci/cibuildwheel/conan_profiles/Macos/mac_build_profile.ini --build missing -of /tmp/ciwheelbuilder/uiucprescon_orc/tmp --conf=tools.cmake.cmaketoolchain:generator=Ninja',
]
repair-wheel-command = [
    "delocate-wheel --version",
    "delocate-listdeps {wheel}",
    "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}",
]
environment-pass = ["CONAN_USER_HOME", "CONAN_HOME"]

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"
CONAN_USER_HOME="$(bash -c 'echo ${CONAN_HOME:-${CIBW_CACHE_PATH:-$HOME/Library/Caches/cibuildwheel}/conan/macos}')"
CONAN_HOME="$(bash -c 'echo ${CONAN_HOME:-${CIBW_CACHE_PATH:-$HOME/Library/Caches/cibuildwheel}/conan/macos/.conan2}')"

[tool.cibuildwheel.linux]
before-all = [
    'yum install -y perl-IPC-Cmd perl-Digest-SHA perl-Time-Piece'
]
test-groups = ["test"]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"
environment-pass = ["CONAN_COMPILER_VERSION", "HOME"]
manylinux-x86_64-image = "quay.io/pypa/manylinux2014"
manylinux-aarch64-image = "quay.io/pypa/manylinux2014"
[tool.cibuildwheel.linux.environment]
#CONAN_USER_HOME="$(bash -c 'echo ${CIBW_CACHE_PATH:-$HOME/Library/Caches/cibuildwheel}/conan/manylinux2014')"
PYTHONFAULTHANDLER="True"

[localbuilder]
conanfile = 'conanfile.py'


[tool.pylint]
extension-pkg-allow-list="uiucprescon.ocr.tesseractwrap"
